// <auto-generated />
using System;
using KWishes.Core.Application.Misc;
using KWishes.Core.Domain.Users;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KWishes.Core.Application.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20231118162952_AddedUsers")]
    partial class AddedUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "role", new[] { "user", "moderator", "admin" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "vote_type", new[] { "wish_vote", "comment_vote" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "wish_status", new[] { "moderation", "in_process", "rejected", "completed" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KWishes.Core.Domain.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Avatar")
                        .HasColumnType("text")
                        .HasColumnName("avatar");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("GoogleNameId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("google_name_id");

                    b.Property<Role>("Role")
                        .HasColumnType("role")
                        .HasColumnName("role");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("second_name");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_email_1");

                    b.HasIndex("GoogleNameId")
                        .IsUnique()
                        .HasDatabaseName("ix_google_name_id_1");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasDatabaseName("ix_username_1");

                    b.ToTable("users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
